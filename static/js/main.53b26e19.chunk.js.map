{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","FindMovie","onAdd","useState","query","setQuery","setMovie","error","setError","onSubmit","event","preventDefault","htmlFor","type","id","placeholder","classNames","value","onChange","target","onClick","title","fetch","then","response","json","data","Response","disabled","App","setMovies","some","item","ReactDOM","render","document","getElementById"],"mappings":"8TAOaA,EAAuB,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OAClC,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACEC,IAAKF,EAAMG,OACXC,IAAI,kBAIV,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJE,IAAI,aAIV,qBAAKH,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAb,SAA2BD,EAAMK,aAIrC,sBAAKJ,UAAU,UAAf,UACGD,EAAMM,KACP,iCC1BKC,EAAwB,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACnC,qBAAKP,UAAU,SAAf,SACGO,EAAOC,KAAI,SAAAT,GAAK,OACf,cAAC,EAAD,CAEEA,MAAOA,GADFA,EAAMU,c,wBCCZ,IAAMC,EAAuB,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACrC,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BF,mBAAuB,MAAjD,mBAAOb,EAAP,KAAcgB,EAAd,KACA,EAA0BH,oBAAS,GAAnC,mBAAOI,EAAP,KAAcC,EAAd,KAgCA,OACE,qCACE,uBAAMjB,UAAU,aAAakB,SAXZ,SAACC,GACpBA,EAAMC,iBAEQ,OAAVrB,IACFY,EAAMZ,GARRe,EAAS,IACTC,EAAS,QAcP,UACE,sBAAKf,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAQqB,QAAQ,cAAjC,yBAIA,qBAAKrB,UAAU,UAAf,SACE,uBACEsB,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZxB,UAAWyB,IAAW,QAAS,CAAE,YAAaT,IAC9CU,MAAOb,EACPc,SAlCS,SAACR,GACpBL,EAASK,EAAMS,OAAOF,OACtBT,GAAS,QAoCFD,GACC,mBAAGhB,UAAU,iBAAb,qDAMJ,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,UAAf,SACE,wBACEsB,KAAK,SACLtB,UAAU,kBACV6B,QA7DM,WChBb,IAAkBC,KDiBZjB,EChBJkB,MAAM,GAAD,OAHE,2CAGF,OAAcD,IACvBE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WDgBxBF,MAAK,SAAAG,GACkB,SAAlBA,EAAKC,SACPrB,EAASoB,GAETlB,GAAS,OAoDP,4BASF,qBAAKjB,UAAU,UAAf,SACE,wBACEsB,KAAK,SACLtB,UAAU,oBACVqC,SAAoB,OAAVtC,EAHZ,qCAWLA,IAAUiB,GACT,sBAAKhB,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,qBACA,cAAC,EAAD,CAAWD,MAAOA,WE/FfuC,EAAU,WACrB,MAA4B1B,mBAAkB,IAA9C,mBAAOL,EAAP,KAAegC,EAAf,KAQA,OACE,sBAAKvC,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYO,OAAQA,MAEtB,qBAAKP,UAAU,UAAf,SACE,cAAC,EAAD,CAAWW,MAZA,SAACZ,GACXQ,EAAOiC,MAAK,SAAAC,GAAI,OAAIA,EAAKhC,SAAWV,EAAMU,WAC7C8B,EAAU,GAAD,mBAAKhC,GAAL,CAAaR,cCN5B2C,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.53b26e19.chunk.js","sourcesContent":["import { FC } from 'react';\nimport './MovieCard.scss';\n\ninterface Props {\n  movie: Movie;\n}\n\nexport const MovieCard: FC<Props> = ({ movie }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.Poster}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.Title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.Plot}\n        <br />\n      </div>\n    </div>\n  </div>\n);\n","import { FC } from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbID}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import {\n  ChangeEvent, FC, FormEvent, useState,\n} from 'react';\nimport './FindMovie.scss';\n\nimport classNames from 'classnames';\nimport { MovieCard } from '../MovieCard';\nimport { GetMovie } from '../../api';\n\ninterface Props {\n  onAdd: (movie: Movie) => void\n}\n\nexport const FindMovie: FC<Props> = ({ onAdd }) => {\n  const [query, setQuery] = useState('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [error, setError] = useState(false);\n\n  const findMovie = () => {\n    GetMovie(query)\n      .then(data => {\n        if (data.Response === 'True') {\n          setMovie(data);\n        } else {\n          setError(true);\n        }\n      });\n  };\n\n  const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n    setError(false);\n  };\n\n  const resetForm = () => {\n    setQuery('');\n    setMovie(null);\n  };\n\n  const handleSubmit = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (movie !== null) {\n      onAdd(movie);\n      resetForm();\n    }\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={handleSubmit}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames('input', { 'is-danger': error })}\n              value={query}\n              onChange={handleChange}\n            />\n          </div>\n\n          {error && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={findMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-primary\"\n              disabled={movie === null}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      {movie && !error && (\n        <div className=\"container\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","const API_URL = 'https://omdbapi.com/?apikey=c309e626&t=';\n\nexport function GetMovie(title: string): Promise<Movie> {\n  return fetch(`${API_URL}${title}`)\n    .then(response => response.json());\n}\n","import { FC, useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App: FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = (movie: Movie) => {\n    if (!movies.some(item => item.imdbID === movie.imdbID)) {\n      setMovies([...movies, movie]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie onAdd={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}